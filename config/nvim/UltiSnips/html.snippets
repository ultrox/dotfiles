# https://github.com/honza/vim-snippets/tree/master/UltiSnips
global !p
from snippet_helpers_html import *
endglobal

snippet html "HTML basic structure" b
	<!DOCTYPE html>
	<html>
		<head>
			<meta charset="UTF-8" />
			<meta name="viewport" content="width=device-width" />
			<title>${1:`!p snip.rv = snip.basename.replace('-', ' ').capitalize()`}</title>
		</head>
		<body>
			${0:body}
		</body>
	</html>
endsnippet

snippet script "HTML <script src...>" w
<script src="$1" charset="${3:utf-8}"></script>
endsnippet

snippet script "HTML <script></script>" w
<script>
	$1
</script>
endsnippet
snippet form "HTML <form>" w
<form action="${1:`!p
snip.rv = (snip.basename or 'unnamed') + '_submit'
`}" method="${2:get}" accept-charset="utf-8">
	${0:${VISUAL}}
</form>
endsnippet

snippet input "Input with Label" w
<label for="${2:${1/[[:alpha:]]+|( )/(?1:_:\L$0)/g}}">$1</label><input type="${3:text/submit/hidden/button}" name="${4:$2}" value="$5"${6: id="${7:$2}"}`!p x(snip)`>
endsnippet

snippet input "HTML <input>" w
<input type="${1:text/submit/hidden/button}" name="${2:some_name}" value="$3"${4: id="${5:$2}"}`!p x(snip)`>
endsnippet

snippet btn "<button>"
<button>$1</button>
endsnippet

snippet jquery "include jquery"
<script src="https://ajax.googleapis.com/ajax/libs/jquery/${1:3.2.1}/jquery.min.js"></script>$0
endsnippet

snippet select "Select Box" w
<select name="${1:some_name}" id="${2:$1}"${3:${4: multiple}${5: size="${6:1}"}}>
	${0:${VISUAL}}
</select>
endsnippet

snippet option "Option" w
<option${1: value="${2:option}"}>${3:$2}</option>
endsnippet



snippet semantic "Semantic Ui setup" b
<!DOCTYPE html>
<html>
  <head>
    <link rel='stylesheet' type='text/css' href='http://oss.maxcdn.com/semantic-ui/2.1.8/semantic.min.css' />
    <script src='https://code.jquery.com/jquery-2.2.0.min.js'></script>
    <script src='http://oss.maxcdn.com/semantic-ui/2.1.8/semantic.min.js'></script>
    <title>Our Sample App</title>
  </head>
  <body>
    $1
  </body>
</html>
endsnippet

snippet foo "Ui input" b
$1`!p snip.rv=complete(t[1], ['focus', 'loading', 'disabled', 'error'])`
endsnippet


snippet uiinput "Ui input" b
<div class="ui input $1`!p snip.rv=complete(t[1], ['focus', 'loading', 'disabled', 'error'])`">
	<input />
	$2
</div>
endsnippet

snippet '^ st' "Status" r
status $1`!p snip.rv=complete('a', 'b')`
endsnippet

snippet alfa "Doing alfa stuff" b
const Button = (${1:*props}) => (
`!p propTypes(t[1], snip)`
);
endsnippet

snippet defi "Constructor"
def initialize(${1:*args})
`!p propTypes(t[1], snip)`
end
endsnippet
