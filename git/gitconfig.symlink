# gitconfig
[user]
  name = ultrox
  email = crashxx@gmail.com
[github]
  user = ultrox
[init]
[alias]
  noa = commit --amend --no-edit
  aa = add --all
  au = add -u
  st = status
  ss  = status
  s = status --short
  track = "!git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`"
  l = "log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)%an%C(reset) - %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
  lg ="log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
  l10 = !git lg -10
  pullff=pull --ff-only
  pl=pull --rebase
    # list all aliases
  ls = "!git config -l | grep alias | cut -c 7-"

  delete-merged-branches = "!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f"
  diff = diff --ignore-space-at-eol -b -w --ignore-blank-lines
  co = checkout
  cob = checkout -b
  br = branch -v
    # rebase commands
  cont = rebase --continue
  conf = "!git s | grep ^U"

    # show what I did today
  day = "!sh -c 'git log --reverse --no-merges --branches=* --date=local --after=\"yesterday 11:59PM\" --author=\"`git config --get user.name`\"'"
  churn = "!f() { git log --all -M -C --name-only --format='format:' \"$@\" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print \"count\tfile\"} {print $1 \"\t\" $2}' | sort -g; }; f"

    # show all deleted files in the repo
  deleted = "!git log --diff-filter=D --summary | grep delete"

    # create an empty commit
  empty = commit --allow-empty

    # current branch
  cbr = rev-parse --abbrev-ref HEAD

    # submodule shortcuts
  si = submodule init
  su = submodule update
  sub = "!git submodule sync && git submodule update"

    # show number of commits per contributer, sorted
  count = shortlog -sn

  undo = reset --soft HEAD~1
  amend = commit -a --amend

    # rebase the current branch with changes from upstream remote
  update = !git fetch upstream && git rebase upstream/`git rev-parse --abbrev-ref HEAD`

    # show the last tag
  lt = describe --tags --abbrev=0

    # show the most recently touched branches
  recent = for-each-ref --sort='-authordate:iso8601' refs/heads/ --format="%(authordate)%09%(objectname:short)%09%1B[0;33m%(refname:short)%1B[m%09"
  latest = "!git for-each-ref --sort='-committerdate' --format='%(color:red)%(refname)%(color:reset)%09%(committerdate)' refs/remotes | sed -e 's-refs/remotes/origin/--' | less -XFR"

    # grep commands

    # 'diff grep'
  dg = "!sh -c 'git ls-files -m | grep $1 | xargs git diff' -"
    # diff grep changes between two commits
  dgc = "!sh -c 'git ls-files | grep $1 | xargs git diff $2 $3 -- ' -"
    # 'checkout grep'
  cg = "!sh -c 'git ls-files -m | grep $1 | xargs git checkout ' -"
    # add grep
  ag = "!sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs git add --all' -"
    # add all
  aa = !git ls-files -d | xargs git rm && git ls-files -m -o --exclude-standard | xargs git add
    # remove grep - Remove found files that are NOT under version control
  rg = "!sh -c 'git ls-files --others --exclude-standard | grep $1 | xargs rm' -"
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = true
[color "branch"]
  current = green bold
  local = green
  remote = red bold
[color "diff"]
  meta = yellow
  frag = magenta bold
  old = red bold
  new = blue
  commit = yellow bold
  whitespace = red reverse
[color "status"]
  added = green bold
  changed = yellow bold
  untracked = red
[color "sh"]
  branch = yellow
[push]
    # push will only do the current branch, not all branches
  default = current
[branch]
    # set up 'git pull' to rebase instead of merge
  autosetuprebase = always
[diff]
  renames = copies
  mnemonicprefix = true
  compactionHeuristic = true
[difftool]
  prompt = false
[apply]
    # do not warn about missing whitespace at EOF
  whitespace = nowarn
[core]
  excludesfile = ~/.gitignore_global
  pager = diff-so-fancy | less --tabs=4 -RFX
  editor = nvim
  whitespace = cr-at-eol
[rerere]
  enabled = false
[gitsh]
  defaultCommand = s
[grep]
  extendRegexp = true
  lineNumber = true
[credential]
  helper = osxkeychain
[rebase]
  instructionFormat = "[%an - %ar] %s"
  autosquash = true
[pager]
  diff = "diff-so-fancy | less --tabs=4 -RFX"
  show = "diff-so-fancy | less --tabs=4 -RFX"
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green
  newHighlight = green 22
[diff-so-fancy]
  stripLeadingSymbols = false
