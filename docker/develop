#!/usr/bin/env bash
# DEFAULT dotfiles
# this is helper file purpuse is to controle docker with it
# and not to type huge complicated comands with different var, but use this file
# Set environment variables for dev or CI

if [ ! -z "$BUILD_NUMBER" ]; then
  # we need full path here becouse /sbin is not in user Jenkins's $PATH
  export XDEBUG_HOST=$(/sbin/ifconfig docker0 | grep "inet addr" | cut -d ':' -f 2 | cut -d ' ' -f 1)
else
  export XDEBUG_HOST=$(ipconfig getifaddr en1)
fi


# export APP_ENV=${APP_ENV:-local}
# export APP_PORT=${APP_PORT:-8099}
# export DB_PORT=${DB_PORT:-3306}
# export DB_ROOT_PASS=${DB_ROOT_PASS:-secret}
# export DB_NAME=${DB_NAME:-helpspot}
# export DB_USER=${DB_USER:-helpspot}
# export DB_PASS=${DB_PASS:-secret}

# prefer local .env file for port and stuff
source ./.env


COMPOSE="docker-compose -f docker-compose.$COMPOSE_FILE.yml"

# if there is arguments grater then 0 pass all the args to docker-compose
if [ $# -gt 0 ];then
  # Decide which docker-compose file to use
  COMPOSE_FILE="dev"

  # Disable pseudo-TTY allocation for CI (Jenkins)
  TTY=""
  # BUILD_NUMBER is env var provided by Jenkins
  if [ ! -z "$BUILD_NUMBER" ]; then 
    COMPOSE_FILE="ci"
    TTY="-T"
  fi
    if [ "$1" == "art" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            app \
            php artisan "$@"
    # backup mysql db
    elif [ "$1" == "restart" ]; then
        shift 1
        $COMPOSE exec \
          app \
          sh -c "supervisorctl restart $@"
    # If "composer" is used, pass-thru to "composer"
    # inside a new container
    elif [ "$1" == "composer" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            app \
            composer "$@"

    # If "test" is used, run unit tests,
    # pass-thru any extra arguments to php-unit
    elif [ "$1" == "test" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            app \
            ./vendor/bin/phpunit "$@"

    # little bit faster version of 'test' execute instead of run new con
    elif [ "$1" == "t" ]; then
    shift 1
    $COMPOSE exec \
      app \
      sh -c "cd /var/www/html && ./vendor/bin/phpunit $@"

    # If "npm" is used, run npm
    # from our node container
    elif [ "$1" == "npm" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            node \
            npm "$@"

    # If "gulp" is used, run gulp
    # from our node container
    elif [ "$1" == "gulp" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            node \
            ./node_modules/.bin/gulp "$@"
    else
        $COMPOSE "$@"
    fi
else
    $COMPOSE ps
fi
# TODO: only run with up/start commands
echo 'nginx port: '$APP_PORT db port: $DB_PORT

